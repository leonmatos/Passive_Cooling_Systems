%!PS-Adobe-2.0
%%Title: ../eps/RexGrDL.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Sep 26 11:12:11 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../eps/RexGrDL.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (leon)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep 26 11:12:11 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 976 672 M
5935 0 V
stroke
LTb
976 672 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 926 M
3568 0 V
2271 0 R
96 0 V
stroke
LTb
976 926 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 1141 M
3568 0 V
2271 0 R
96 0 V
stroke
LTb
976 1141 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 1327 M
3568 0 V
2271 0 R
96 0 V
stroke
LTb
976 1327 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 1491 M
3568 0 V
2271 0 R
96 0 V
stroke
LTb
976 1491 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 1638 M
3568 0 V
2271 0 R
96 0 V
stroke
LTb
976 1638 M
63 0 V
5872 0 R
-63 0 V
stroke
880 1638 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1000)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 976 2604 M
3568 0 V
2271 0 R
96 0 V
stroke
LTb
976 2604 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 3169 M
5935 0 V
stroke
LTb
976 3169 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 3570 M
5935 0 V
stroke
LTb
976 3570 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 3881 M
5935 0 V
stroke
LTb
976 3881 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 4135 M
5935 0 V
stroke
LTb
976 4135 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 4350 M
5935 0 V
stroke
LTb
976 4350 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 4536 M
5935 0 V
stroke
LTb
976 4536 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 4700 M
5935 0 V
stroke
LTb
976 4700 M
31 0 V
5904 0 R
-31 0 V
stroke
LTa
0.73 0.73 0.73 C 976 4847 M
5935 0 V
stroke
LTb
976 4847 M
63 0 V
5872 0 R
-63 0 V
stroke
880 4847 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10000)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 976 672 M
0 4175 V
stroke
LTb
976 672 M
0 63 V
0 4112 R
0 -63 V
stroke
976 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1e+07)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 1572 672 M
0 4175 V
stroke
LTb
1572 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 1920 672 M
0 4175 V
stroke
LTb
1920 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 2167 672 M
0 4175 V
stroke
LTb
2167 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 2359 672 M
0 4175 V
stroke
LTb
2359 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 2515 672 M
0 4175 V
stroke
LTb
2515 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 2648 672 M
0 4175 V
stroke
LTb
2648 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 2763 672 M
0 4175 V
stroke
LTb
2763 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 2864 672 M
0 4175 V
stroke
LTb
2864 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 2954 672 M
0 4175 V
stroke
LTb
2954 672 M
0 63 V
0 4112 R
0 -63 V
stroke
2954 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1e+08)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3550 672 M
0 4175 V
stroke
LTb
3550 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 3898 672 M
0 4175 V
stroke
LTb
3898 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 4145 672 M
0 4175 V
stroke
LTb
4145 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 4337 672 M
0 4175 V
stroke
LTb
4337 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 4494 672 M
0 4175 V
stroke
LTb
4494 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 4626 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
4626 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 4741 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
4741 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 4842 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
4842 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 4933 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
4933 672 M
0 63 V
0 4112 R
0 -63 V
stroke
4933 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1e+09)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 5528 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
5528 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 5877 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
5877 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 6124 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
6124 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 6315 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
6315 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 6472 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
6472 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 6605 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
6605 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 6719 672 M
0 63 V
0 1920 R
0 2192 V
stroke
LTb
6719 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 6820 672 M
0 4175 V
stroke
LTb
6820 672 M
0 31 V
0 4144 R
0 -31 V
stroke
LTa
0.73 0.73 0.73 C 6911 672 M
0 4175 V
stroke
LTb
6911 672 M
0 63 V
0 4112 R
0 -63 V
stroke
6911 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1e+10)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
976 4847 N
976 672 L
5935 0 V
0 4175 V
-5935 0 V
Z stroke
LCb setrgbcolor
128 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Re)]
] -53.3 MCshow
grestore
LTb
LCb setrgbcolor
3943 272 M
[ [(Helvetica) 160.0 0.0 true true 0 (Gr)]
[(Helvetica) 128.0 -48.0 true true 0 (m)]
[(Helvetica) 160.0 0.0 true true 0 (D/L)]
] -37.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
4544 735 N
0 1920 V
2271 0 V
0 -1920 V
-2271 0 V
Z stroke
4544 2655 M
2271 0 V
% Begin plot #1
1.000 UP
stroke
2.000 UL
LT0
LC2 setrgbcolor
0.00 0.00 0.00 C 6176 2535 M
[ [(Helvetica) 160.0 0.0 true true 0 (HHHC - experiment)]
] -53.3 MRshow
LT0
LC2 setrgbcolor
2243 1437 BoxF
3129 2263 BoxF
3765 2485 BoxF
3971 3195 BoxF
6495 2535 BoxF
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT1
LC0 setrgbcolor
0.00 0.00 0.00 C 6176 2295 M
[ [(Helvetica) 160.0 0.0 true true 0 (HHVC - experiment)]
] -53.3 MRshow
LT1
LC0 setrgbcolor
1893 1677 CircleF
2881 2452 CircleF
3584 2738 CircleF
4203 3152 CircleF
4599 3460 CircleF
4973 3778 CircleF
6495 2295 CircleF
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LT2
LC1 setrgbcolor
0.00 0.00 0.00 C 6176 2055 M
[ [(Helvetica) 160.0 0.0 true true 0 (VHHC - experiment)]
] -53.3 MRshow
LT2
LC1 setrgbcolor
1666 1340 TriU
2788 1978 TriU
3547 2339 TriU
3609 2446 TriU
4010 2754 TriU
4139 2626 TriU
4440 2966 TriU
4463 3179 TriU
4775 3306 TriU
5026 3508 TriU
5188 3678 TriU
5345 3880 TriU
5618 3827 TriU
5769 4061 TriU
5886 4114 TriU
6495 2055 TriU
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LT3
LC3 setrgbcolor
0.00 0.00 0.00 C 6176 1815 M
[ [(Helvetica) 160.0 0.0 true true 0 (VHVC - experiment)]
] -53.3 MRshow
LT3
LC3 setrgbcolor
1383 1204 TriUF
2336 1521 TriUF
2486 2210 TriUF
2988 2019 TriUF
3211 2443 TriUF
3534 2453 TriUF
3723 2305 TriUF
3980 2623 TriUF
4175 2665 TriUF
4459 3237 TriUF
4548 2983 TriUF
4816 3364 TriUF
5089 3364 TriUF
5133 3544 TriUF
5406 3576 TriUF
5551 3756 TriUF
5774 3777 TriUF
6495 1815 TriUF
% End plot #4
% Begin plot #5
2.000 UL
LT4
LC2 setrgbcolor
0.00 0.00 0.00 C 6176 1575 M
[ [(Helvetica) 160.0 0.0 true true 0 (HHHC - model)]
] -53.3 MRshow
LT4
LC2 setrgbcolor
6272 1575 M
447 0 V
2243 1838 M
886 513 V
636 408 V
206 106 V
% End plot #5
% Begin plot #6
stroke
LT5
LC0 setrgbcolor
0.00 0.00 0.00 C 6176 1335 M
[ [(Helvetica) 160.0 0.0 true true 0 (HHVC - model)]
] -53.3 MRshow
LT5
LC0 setrgbcolor
6272 1335 M
447 0 V
1893 1673 M
988 592 V
703 401 V
619 405 V
396 237 V
374 197 V
% End plot #6
% Begin plot #7
stroke
LT6
LC1 setrgbcolor
0.00 0.00 0.00 C 6176 1095 M
[ [(Helvetica) 160.0 0.0 true true 0 (VHHC - model)]
] -53.3 MRshow
LT6
LC1 setrgbcolor
6272 1095 M
447 0 V
1666 1479 M
1122 666 V
759 479 V
62 38 V
401 226 V
129 75 V
301 203 V
23 14 V
312 186 V
251 133 V
162 98 V
157 95 V
273 160 V
151 111 V
117 50 V
% End plot #7
% Begin plot #8
stroke
LT7
LC3 setrgbcolor
0.00 0.00 0.00 C 6176 855 M
[ [(Helvetica) 160.0 0.0 true true 0 (VHVC - model)]
] -53.3 MRshow
LT7
LC3 setrgbcolor
6272 855 M
447 0 V
1383 1374 M
953 584 V
150 92 V
502 305 V
223 136 V
323 195 V
189 115 V
257 155 V
195 118 V
284 171 V
89 54 V
268 160 V
273 164 V
44 27 V
273 163 V
145 87 V
223 133 V
% End plot #8
stroke
1.000 UL
LTb
976 4847 N
976 672 L
5935 0 V
0 4175 V
-5935 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
